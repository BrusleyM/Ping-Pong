name: Unity VR Android Build & Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  prep:
    name: Prep Environment
    runs-on: ubuntu-latest
    outputs:
      prep-done: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Cache Unity Library
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-Android-

      # Cache Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      # Ensure build folder exists
      - name: Ensure build folder
        run: mkdir -p Builds/Android

      # Free disk space
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true

  build:
    name: Build Unity Android
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - name: Checkout Repository in Detached HEAD
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Checkout detached HEAD
        run: |
          git fetch --depth=1
          git checkout --detach

      # Apply CI manifests temporarily
      - name: Apply CI manifests
        run: |
          cp Packages/manifest.ci.json Packages/manifest.json
          cp Packages/packages-lock.ci.json Packages/packages-lock.json

      # Build Unity Project
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          CI: true
        with:
          targetPlatform: Android
          buildMethod: BuildScript.Execute
          buildsPath: Builds/Android
          allowDirtyBuild: true

      # Upload build artifacts for next job
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android

  deploy-meta:
    name: Upload to Meta Quest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Download the build artifacts
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android

      # Upload to Meta Quest
      - name: Upload Meta Quest Build
        uses: RageAgainstThePixel/upload-meta-quest-build@v2
        with:
          appId: ${{ secrets.META_APP_ID }}
          appSecret: ${{ secrets.META_APP_SECRET }}
          buildDir: 'Builds/Android'
          releaseChannel: 'ALPHA'
          ageGroup: 'TEENS_AND_ADULTS'
          draft: false
          releaseNotes: 'Automated CI upload'
