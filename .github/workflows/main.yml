name: Unity VR Android Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build Unity Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository in Detached HEAD
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache Git LFS
        uses: actions/cache@v4
        with:
          path: .git/lfs/objects
          key: ${{ runner.os }}-lfs-${{ hashFiles('**/Assets/**') }}

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Android-

      - name: Cache Gradle packages and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Ensure build folder
        run: mkdir -p Builds/Android

      - name: Apply CI manifests
        run: |
          cp Packages/manifest.ci.json Packages/manifest.json
          cp Packages/packages-lock.ci.json Packages/packages-lock.json

      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true

      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          CI: true
        with:
          targetPlatform: Android
          buildMethod: BuildScript.Execute
          buildsPath: Builds/Android
          allowDirtyBuild: true

      - name: Commit version changes
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -- Packages/manifest.json Packages/packages-lock.json
          git add ProjectSettings/ProjectSettings.asset Packages/manifest.json Packages/packages-lock.json
          git commit -m "Version bump and revert CI manifest swap on branch $GITHUB_REF" || echo "No changes to commit"
          git push origin HEAD:$GITHUB_REF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android
