name: Unity VR Android Build

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # Job A: Prepare caches and free disk space
  prep:
    name: Prepare Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-Android-
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true

  # Job B: Unity build
  unity-build:
    name: Build Unity Project
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Ensure build folder exists
        run: mkdir -p Builds/Android
      - name: Apply CI manifests
        run: |
          cp Packages/manifest.ci.json Packages/manifest.json
          cp Packages/packages-lock.ci.json Packages/packages-lock.json
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          CI: true
        with:
          targetPlatform: Android
          buildMethod: BuildScript.Execute
          buildsPath: Builds/Android
          allowDirtyBuild: true
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android

  # Job C: Meta Quest Upload
  meta-upload:
    name: Upload to Meta Quest
    runs-on: ubuntu-latest
    needs: unity-build
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android
      - name: Install Meta Quest CLI
        run: |
          curl -sSL https://developer.oculus.com/downloads/package/ovr-platform-util/latest/linux/ovr-platform-util-linux.zip -o ovr.zip
          unzip -q ovr.zip -d ovr-cli
          chmod +x ovr-cli/ovr-platform-util
          echo "$PWD/ovr-cli" >> $GITHUB_PATH
      - name: Upload Meta Quest Build
        uses: RageAgainstThePixel/upload-meta-quest-build@v2
        with:
          appId: ${{ secrets.META_APP_ID }}
          appSecret: ${{ secrets.META_APP_SECRET }}
          buildDir: 'Builds/Android'
          releaseChannel: 'ALPHA'
          ageGroup: 'TEENS_AND_ADULTS'
          draft: false
          releaseNotes: 'Automated build upload'
