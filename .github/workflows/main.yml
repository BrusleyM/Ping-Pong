name: Unity VR Android Build and Upload

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

concurrency:
  group: unity-android-build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: Build Unity Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache Git LFS
        uses: actions/cache@v4
        with:
          path: .git/lfs/objects
          key: ${{ runner.os }}-lfs-${{ hashFiles('**/Assets/**') }}

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Android-

      - name: Cache Gradle packages and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Ensure build folder
        run: mkdir -p Builds/Android/

      - name: Apply CI manifests
        run: |
          cp Packages/manifest.ci.json Packages/manifest.json
          cp Packages/packages-lock.ci.json Packages/packages-lock.json

      - name: Set ENV variables
        run: |
         if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
          echo "BranchName=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV
          echo "IsPR=true" >> $GITHUB_ENV
         else
          echo "BranchName=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "IsPR=false" >> $GITHUB_ENV
         fi

      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true

      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          CI: true
        with:
          targetPlatform: Android
          buildMethod: BuildScript.Execute
          buildsPath: Builds/Android
          allowDirtyBuild: true
          customParameters: |
            BranchName=${{ env.BranchName }}
            IsPR=${{ env.IsPR }}

      - name: Upload Unity Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android/
          retention-days: 30

      - name: Commit ProjectSettings.asset
        if: github.event_name == 'pull_request' && github.base_ref == 'develop'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git add ProjectSettings/ProjectSettings.asset
          git commit -m "Update ProjectSettings.asset from CI version bump" || echo "No changes to commit"
          git push origin HEAD:${{ github.head_ref }}

  upload-meta:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Unity Build Artifact
        if: github.ref == 'refs/heads/develop'
        uses: actions/download-artifact@v4
        with:
          name: Unity-Build
          path: Builds/Android/

      - name: Setup ovr-platform-util
        uses: RageAgainstThePixel/setup-ovr-platform-util@v1

      - name: Upload Meta Quest Build to ALPHA
        if: github.ref == 'refs/heads/develop'
        uses: RageAgainstThePixel/upload-meta-quest-build@v2
        with:
          appId: ${{ secrets.META_APP_ID }}
          appSecret: ${{ secrets.META_APP_SECRET }}
          buildDir: 'Builds/Android/'
          releaseChannel: 'ALPHA'
          ageGroup: 'MIXED_AGES'
          draft: false
          releaseNotes: 'Automated CI upload after PR merge'

      - name: Promote ALPHA build to BETA
        if: github.ref == 'refs/heads/main'
        run: |
          ovr-platform-util set-release-channel-build \
            --age-group MIXED_AGES \
            --app-id ${{ secrets.META_APP_ID }} \
            --app-secret ${{ secrets.META_APP_SECRET }} \
            --source-channel ALPHA \
            --destination-channel BETA

      - name: Create Git Tag
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git fetch --tags
          VERSION=$(grep 'bundleVersion:' ProjectSettings/ProjectSettings.asset | awk '{print $2}')
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            TAG="v${VERSION}-beta"
          else
            TAG="v${VERSION}-alpha"
          fi
          git tag -a "$TAG" -m "Automated CI tag for $TAG"
          git push origin "$TAG"
