name: Unity Android CI ðŸ˜Ž

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    container:
      image: unityci/editor:ubuntu-2022.3.51f1-android-3
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Restore Library cache
      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-

      # Unity Android Build
      - name: Build project
        id: unity_build
        run: |
          /opt/unity/Editor/Unity \
            -projectPath "$GITHUB_WORKSPACE" \
            -executeMethod BuildScript.Execute \
            -quit -batchmode -nographics \
            -buildTarget Android \
            -logFile "$GITHUB_WORKSPACE/unity_build.log"
        continue-on-error: true

      # Check for critical errors (ignore simulator)
      - name: Check build log
        run: |
          SIMULATOR_ERROR="Library/PackageCache/com.meta.xr.simulator"
          if grep -q "$SIMULATOR_ERROR" "$GITHUB_WORKSPACE/unity_build.log"; then
            echo "Simulator errors detected. Ignored."
          elif grep -i "error" "$GITHUB_WORKSPACE/unity_build.log"; then
            echo "Critical errors detected. Failing build."
            cat "$GITHUB_WORKSPACE/unity_build.log"
            exit 1
          else
            echo "Build succeeded."
          fi

      # Upload artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Unity-Build-Artifacts
          path: |
            unity_build.log
            Builds/Android/**/*.apk
            Builds/Android/**/*.obb
